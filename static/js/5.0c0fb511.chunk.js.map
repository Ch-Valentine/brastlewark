{"version":3,"sources":["modules/list-of-gnomes/list-item.jsx","utils/prop-types.js","modules/list-of-gnomes/index.jsx","modules/list-of-gnomes/utils.js"],"names":["ListItem","PropTypes","number","isRequired","string","arrayOf","id","name","thumbnail","professions","to","className","alt","src","ListOfGnomes","data","useData","useQueryState","offset","setOffset","search","setSearch","useMemo","searchResult","filter","gnome","searchable","includes","toLowerCase","Object","values","slice","length","gnomesToDisplay","matchCount","onShowMoreGnomes","useCallback","Number","onSearchInputChange","e","target","value","actions","type","placeholder","onChange","map","key","onClick"],"mappings":"wMAeeA,GCZTC,IAAUC,OAAOC,WACfF,IAAUG,OAAOD,WAClBF,IAAUC,OAAOC,WACdF,IAAUC,OAAOC,WACjBF,IAAUC,OAAOC,WACbF,IAAUG,OAAOD,WAClBF,IAAUG,OAAOD,WACnBF,IAAUI,QAAQJ,IAAUG,QAAQD,WAChCF,IAAUI,QAAQJ,IAAUG,QAAQD,WDPlC,SAAC,GAAD,IAAGG,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAb,EAAwBC,YAAxB,OACf,kBAAC,IAAD,CAAMC,GAAE,kBAAaJ,GAAMK,UAAU,aACnC,yBAAKA,UAAU,oBAAoBC,IAAG,UAAKL,EAAL,WAAoBM,IAAKL,IAC/D,yBAAKG,UAAU,mBACXJ,M,cEuDOO,UApDM,WAAO,IAClBC,EAASC,cAATD,KADiB,EAEGE,YAAc,SALjB,IAGA,mBAElBC,EAFkB,KAEVC,EAFU,OAGGF,YAAc,UAHjB,mBAGlBG,EAHkB,KAGVC,EAHU,OAKaC,mBAAQ,WAC5C,IAAKP,EAAM,MAAO,GAElB,IACMQ,ECpBY,SAACR,EAAMX,GAC3B,OAAKA,EAEEW,EAAKS,QAAO,SAACC,GAAD,OAAWA,EAAMC,WAAWC,SAASvB,EAAOwB,kBAF3Cb,EDmBGS,CADHK,OAAOC,OAAOf,GACOK,GAEvC,MAAO,CAACG,EAAaQ,MAAM,EAAGb,GAASK,EAAaS,UACnD,CAACjB,EAAMG,EAAQE,IAZO,mBAKlBa,EALkB,KAKDC,EALC,KAcnBC,EAAmBC,uBAAY,WACnCjB,EAAUkB,OAAOnB,GAjBR,MAkBR,CAACA,EAlBO,KAoBLoB,EAAsBF,uBAAY,SAACG,GACvClB,EAAUkB,EAAEC,OAAOC,OACnBtB,EAvBuB,MAwBtB,CAACE,IAEJ,OAAON,EACL,kBAAC,IAAD,CACE2B,QACE,2BACE/B,UAAU,SACVgC,KAAK,OACLC,YAAY,wDACZH,MAAOrB,EACPyB,SAAUP,KAId,yBAAK3B,UAAU,QACZsB,EAAgBD,OAASC,EAAgBa,KAAI,SAAArB,GAAK,OACjD,kBAAC,EAAD,eAAUsB,IAAKtB,EAAMnB,IAAQmB,OAC1B,wDAGNS,EA5CoB,GA6CnB,4BAAQvB,UAAU,UAChB,4BAAQA,UAAU,YAAYgC,KAAK,SAASK,QAASb,GAArD,cAIA,MAEJ,kBAAC,IAAD","file":"static/js/5.0c0fb511.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { GNOME } from '../../utils/prop-types';\n\nconst ListItem = ({ id, name, thumbnail, professions }) => (\n  <Link to={`/gnomes/${id}`} className=\"list-item\">\n    <img className=\"list-item__avatar\" alt={`${name} avatar`} src={thumbnail} />\n    <div className=\"list-item__name\">\n      { name }\n    </div>\n  </Link>\n);\n\nListItem.propTypes = GNOME;\n\nexport default ListItem;\n","import PropTypes from \"prop-types\";\n\nexport const GNOME = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  age: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  weight: PropTypes.number.isRequired,\n  hair_color: PropTypes.string.isRequired,\n  thumbnail: PropTypes.string.isRequired,\n  friends: PropTypes.arrayOf(PropTypes.string).isRequired,\n  professions: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React, { useCallback, useMemo } from 'react';\nimport Layout from '../../components/layout';\nimport PagePreview from '../../components/page-preview';\nimport ListItem from './list-item';\nimport { useData, useQueryState } from \"../../utils/hooks\";\nimport { filter } from \"./utils\";\nimport './styles.css';\n\nconst gnomesPerPageCount = 20;\nconst step = 10;\n\nconst ListOfGnomes = () => {\n  const { data } = useData();\n  const [offset, setOffset] = useQueryState('offset', gnomesPerPageCount);\n  const [search, setSearch] = useQueryState('search');\n\n  const [gnomesToDisplay, matchCount] = useMemo(() => {\n    if (!data) return [];\n\n    const allGnomes = Object.values(data);\n    const searchResult = filter(allGnomes, search);\n\n    return [searchResult.slice(0, offset), searchResult.length];\n  }, [data, offset, search])\n\n  const onShowMoreGnomes = useCallback(() => {\n    setOffset(Number(offset) + step)\n  }, [offset, step])\n\n  const onSearchInputChange = useCallback((e) => {\n    setSearch(e.target.value);\n    setOffset(gnomesPerPageCount);\n  }, [setSearch]);\n\n  return data ? (\n    <Layout\n      actions={(\n        <input\n          className=\"search\"\n          type=\"text\"\n          placeholder=\"Search by name, age, hair color, gender or profession\"\n          value={search}\n          onChange={onSearchInputChange}\n        />\n      )}\n    >\n      <div className=\"list\">\n        {gnomesToDisplay.length ? gnomesToDisplay.map(gnome => (\n          <ListItem key={gnome.id} {...gnome} />\n        )) : <h3>No result by the search</h3>}\n      </div>\n\n      {matchCount > gnomesPerPageCount ? (\n        <footer className=\"footer\">\n          <button className=\"show-more\" type=\"button\" onClick={onShowMoreGnomes}>\n            show more\n          </button>\n        </footer>\n      ) : null}\n    </Layout>\n  ) : <PagePreview />;\n};\n\nexport default ListOfGnomes;\n","export const filter = (data, string) => {\n  if (!string) return data;\n\n  return data.filter((gnome) => gnome.searchable.includes(string.toLowerCase()));\n}\n"],"sourceRoot":""}